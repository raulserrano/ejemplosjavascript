<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MODIFICACIÓN DOM: CREAR Y ELIMINAR ELEMENTOS</title>
</head>
<style>
    .cuadrado {
        width: 6em;
        height: 6em;
        border: 2px solid black;
        padding: 5px;
        margin: 1em;
    }

    .rojo {
        background-color: red;
    }
</style>

<body>

    <div id="contenedor"></div>

    <script>

        // CREACIÓN DE NODOS.

        // Podemos crear nodos de tipo elemento con el método
        // createElement de document
        //
        // document.createElement('ETIQUETA')

        let bloque = document.createElement('div');
        bloque.className = "cuadrado"

        // Tambien podemos manipulas las clases de un elemento
        // con los métodos add y remove del objeto classList

        bloque.classList.add('rojo')

        // Le añadimos contenido

        bloque.textContent = 'TEXTO1 '

        // Ya tenemos el nodo de tipo elemento creado, lo tenemos
        // en memoria pero el navegador no lo renderiza por que no 
        // lo hemos colocado en el árbol. Para ello hay muchos métodos
        // el más habitual será append, su sintaxis es:
        // elemento.append(nodo1[,nodo2,...,cadena1,cadena2,...])
        // esto añadirá el elemento o elementos al final del contenido
        // de elemento.

        let contenedor = document.querySelector('#contenedor');
        contenedor.append(bloque)
        bloque.append('TEXTO2 ')

        // También disponemos de un método para crear nodos de tipo texto
        // document.createTextNode('cadena')

        let texto3 = document.createTextNode('TEXTO3 ')
        bloque.append(texto3)

        // Pero esto lo pedemos hacer directamente con append

        bloque.append('TEXTO4 ', 'TEXTO5 ')

        // De comportamiento similar a append, pero colocando el nodo
        // en diferente lugar tenemos los siguientes:

        // elemento.prepend(nodonuevo) -> Inserta el nodo al principio de elemento.
        // elemento.before(nodonuevo) -> Inserta el nodo antes del elemento.
        // elemento.after(nodonuevo) -> Inserta el nodo después del elemento.

        // ELIMINACIÓN DE NODOS

        // elemento.remove() elimina el nodo elemento

        //bloque.remove()

        // Aunque existen más, con los métodos vistos podremos hacer 
        // las operaciones de creación y eliminación de nodos.
        // También hay otros más antiguos que si bien todavia se 
        // pueden ver en código, ya están en desuso, por ejemplo:

        // elemento.appendChild(nodo) añade el nodo al final de elemento
        // parentNode.removeChild(nodo) elimina nodo de parentNode



        


    </script>

</body>

</html>